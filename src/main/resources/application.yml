users.url: "http://localhost:8081"
content.url: "http://localhost:8082"
api-gateway.url: "http://localhost:8080"

spring:
  cloud:
    gateway:
      routes:
      - id: user-api
        uri: ${users.url}
        predicates:
        - Path=/api/v1/user/**

      - id: content-api
        uri: ${content.url}
        predicates:
        - Path=/api/v1/content/**
        filters:
        - name: Hystrix
          args:
            name: getContent
            fallbackUri: forward:/hystrixfallback

      - id: aGroup
        uri: ${content.url}
        predicates:
        - Path=/api/v1/abtest/**
        - Header=X-Request-AbGroup, a

      - id: bGroup
        uri: ${users.url}
        predicates:
        - Path=/api/v1/abtest/**
        - Header=X-Request-AbGroup, b

      - id: swagger-user
        uri: ${users.url}
        predicates:
        - Path=/v2/api-docs/user
        filters:
        - RewritePath=/v2/api-docs/user, /v2/api-docs

      - id: swagger-content
        uri: ${content.url}
        predicates:
        - Path=/v2/api-docs/content
        filters:
        - RewritePath=/v2/api-docs/content, /v2/api-docs

      - id: fallback
        uri: ${api-gateway.url}
        predicates:
        - Path=/hystrixfallback

hystrix:
  command:
    getContent:
      execution:
        isolation:
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 1000 # SLA 500 ms for PROD and 1s for STAGING. Just keep up to prod and see how it behaves.

